{"version":3,"file":"460.js","mappings":"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","sources":["webpack://WebComponents/./runestone/reveal/js/reveal.js"],"sourcesContent":["/*==========================================\n=======      Master reveal.js       ========\n============================================\n===     This file contains the JS for    ===\n===     the Runestone reval component.   ===\n============================================\n===              Created by              ===\n===           Isaiah Mayerchak           ===\n===               06/12/15               ===\n==========================================*/\n\"use strict\";\n\nvar RevealList = {}; // Dictionary that contains all instances of Reveal objects\n\nimport RunestoneBase from \"../../common/js/runestonebase\";\nimport \"../css/reveal.css\";\n\n// Define Reveal object\nclass Reveal extends RunestoneBase {\n    constructor(opts) {\n        super(opts);\n        var orig = opts.orig; // entire <div> element that will be replaced by new HTML\n        this.origElem = orig;\n        this.divid = orig.id;\n        this.dataModal = false; // is a model dialog vs. inline\n        if ($(this.origElem).is(\"[data-modal]\")) {\n            this.dataModal = true;\n        }\n        if ($(this.origElem).is(\"[data-instructoronly]\")) {\n            this.instructorOnly = true;\n        } else {\n            this.instructorOnly = false;\n        }\n        this.modalTitle = null;\n        this.showtitle = null; // Title of button that shows the concealed data\n        this.hidetitle = null;\n        this.origContent = $(this.origElem).html();\n        this.children = [];\n        this.adoptChildren();\n        this.checkForTitle();\n        this.getButtonTitles();\n        // Delay creating instructoronly buttons until login\n        if (!this.instructorOnly) {\n            this.createShowButton();\n            if (!this.dataModal) {\n                this.createHideButton(); // Hide button is already implemented in modal dialog\n            }\n        }\n        this.indicate_component_ready();\n    }\n    /*====================================\n    == Get text for buttons/modal title ==\n    ====================================*/\n    adoptChildren() {\n        for (var i = 0; i < this.origElem.childNodes.length; i++) {\n            this.children.push(this.origElem.childNodes[i]);\n        }\n    }\n    getButtonTitles() {\n        this.showtitle = $(this.origElem).data(\"showtitle\");\n        if (this.showtitle === undefined) {\n            this.showtitle = \"Show\"; // default\n        }\n        if (this.instructorOnly) {\n            this.showtitle += \" IG\";\n        }\n        this.hidetitle = $(this.origElem).data(\"hidetitle\");\n        if (this.hidetitle === undefined) {\n            this.hidetitle = \"Hide\"; // default\n        }\n    }\n    checkForTitle() {\n        this.modalTitle = $(this.origElem).data(\"title\");\n        if (this.modalTitle === undefined) {\n            this.modalTitle = \"Message from the author\"; // default\n        }\n    }\n    /*============================\n    == Create show/hide buttons ==\n    ============================*/\n    createShowButton() {\n        var _this = this;\n        this.containerDiv = document.createElement(\"div\"); // wrapper div\n        this.containerDiv.id = this.divid;\n        if (!this.dataModal) {\n            this.revealDiv = document.createElement(\"div\"); // Div that is hidden that contains content\n            // Get original content, put it inside revealDiv and replace original div with revealDiv\n            //$(this.revealDiv).html(this.origContent);\n            for (var i = 0; i < this.children.length; i++) {\n                this.revealDiv.appendChild(this.children[i]);\n            }\n            $(this.revealDiv).hide();\n            this.containerDiv.appendChild(this.revealDiv);\n        }\n        if (this.instructorOnly) {\n            $(this.revealDiv).addClass(\"iguide\");\n        }\n        this.sbutt = document.createElement(\"button\");\n        $(this.sbutt).addClass(\"btn reveal_button\");\n        if (this.instructorOnly) {\n            $(this.sbutt).addClass(\"btn-info\");\n        } else {\n            $(this.sbutt).addClass(\"btn-default\");\n        }\n        $(this.sbutt).css(\"margin-bottom\", \"10px\");\n        this.sbutt.textContent = this.showtitle;\n        this.sbutt.id = this.divid + \"_show\";\n        if (!this.dataModal) {\n            this.sbutt.onclick = function () {\n                _this.showInline();\n                $(this).hide();\n            };\n        } else {\n            this.createModal();\n            $(this.sbutt).attr({\n                \"data-toggle\": \"modal\",\n                \"data-target\": \"#\" + this.divid + \"_modal\",\n            });\n        }\n        this.containerDiv.appendChild(this.sbutt);\n        $(this.origElem).replaceWith(this.containerDiv);\n    }\n    createHideButton() {\n        var _this = this;\n        this.hbutt = document.createElement(\"button\");\n        $(this.hbutt).hide();\n        this.hbutt.textContent = this.hidetitle;\n        this.hbutt.className = \"btn btn-default reveal_button\";\n        $(this.hbutt).css(\"margin-bottom\", \"10px\");\n        this.hbutt.id = this.divid + \"_hide\";\n        this.hbutt.onclick = function () {\n            _this.hideInline();\n            $(this).hide();\n        };\n        this.containerDiv.appendChild(this.hbutt);\n    }\n    createInstructorButtons() {\n        this.createShowButton();\n        if (!this.dataModal) {\n            this.createHideButton();\n        }\n    }\n    /*=================\n    === Modal logic ===\n    =================*/\n    createModal() {\n        this.modalContainerDiv = document.createElement(\"div\");\n        $(this.modalContainerDiv).addClass(\"modal fade\");\n        this.modalContainerDiv.id = this.divid + \"_modal\";\n        $(this.modalContainerDiv).attr(\"role\", \"dialog\");\n        document.body.appendChild(this.modalContainerDiv);\n        this.modalDialogDiv = document.createElement(\"div\");\n        $(this.modalDialogDiv).addClass(\"modal-dialog\");\n        this.modalContainerDiv.appendChild(this.modalDialogDiv);\n        this.modalContentDiv = document.createElement(\"div\");\n        $(this.modalContentDiv).addClass(\"modal-content\");\n        this.modalDialogDiv.appendChild(this.modalContentDiv);\n        this.modalHeaderDiv = document.createElement(\"div\");\n        $(this.modalHeaderDiv).addClass(\"modal-header\");\n        this.modalContentDiv.appendChild(this.modalHeaderDiv);\n        this.modalButton = document.createElement(\"button\");\n        this.modalButton.type = \"button\";\n        $(this.modalButton).addClass(\"close\");\n        $(this.modalButton).attr({\n            \"aria-hidden\": \"true\",\n            \"data-dismiss\": \"modal\",\n        });\n        this.modalButton.innerHTML = \"&times\";\n        this.modalHeaderDiv.appendChild(this.modalButton);\n        this.modalTitleE = document.createElement(\"h4\");\n        $(this.modalTitleE).addClass(\"modal-title\");\n        this.modalTitleE.innerHTML = this.modalTitle;\n        this.modalHeaderDiv.appendChild(this.modalTitleE);\n        this.modalBody = document.createElement(\"div\");\n        $(this.modalBody).addClass(\"modal-body\");\n        for (var i = 0; i < this.children.length; i++) {\n            this.modalBody.appendChild(this.children[i]);\n        }\n        this.modalContentDiv.appendChild(this.modalBody);\n        /*var html = \"<div class='modal fade'>\" +\n                    \"    <div class='modal-dialog compare-modal'>\" +\n                    \"        <div class='modal-content'>\" +\n                    \"            <div class='modal-header'>\" +\n                    \"                <button type='button' class='close' data-dismiss='modal' aria-hidden='true'>&times;</button>\" +\n                    \"                <h4 class='modal-title'>\" + this.modalTitle + \"</h4>\" +\n                    \"            </div>\" +\n                    \"            <div class='modal-body'>\" +\n                    this.origContent +\n                    \"            </div>\" +\n                    \"        </div>\" +\n                    \"    </div>\" +\n                    \"</div>\";*/\n        //var el = $(this.modalContainerDiv);\n        //el.modal();\n    }\n    /*==================\n    === Inline logic ===\n    ==================*/\n    showInline() {\n        $(this.revealDiv).show();\n        $(this.hbutt).show();\n        $(this.revealDiv)\n            .find(\".CodeMirror\")\n            .each(function (i, el) {\n                el.CodeMirror.refresh();\n            });\n    }\n    hideInline() {\n        $(this.revealDiv).hide();\n        $(this.sbutt).show();\n    }\n}\n\n/*=================================\n== Find the custom HTML tags and ==\n==     execute our code on them        ==\n=================================*/\n\n$(document).on(\"runestone:login-complete\", function () {\n    $(\"[data-component=reveal]\").each(function (index) {\n        try {\n            RevealList[this.id] = new Reveal({ orig: this });\n        } catch (err) {\n            console.log(`Error rendering Reveal ${this.id}`);\n        }\n    });\n\n    if (eBookConfig.isInstructor) {\n        for (const divid of Object.keys(RevealList)) {\n            if (RevealList[divid].instructorOnly) {\n                RevealList[divid].createInstructorButtons();\n            }\n        }\n    }\n});\n"],"names":["RevealList","Reveal","constructor","opts","super","orig","this","origElem","divid","id","dataModal","$","is","instructorOnly","modalTitle","showtitle","hidetitle","origContent","html","children","adoptChildren","checkForTitle","getButtonTitles","createShowButton","createHideButton","indicate_component_ready","i","childNodes","length","push","data","undefined","_this","containerDiv","document","createElement","revealDiv","appendChild","hide","addClass","sbutt","css","textContent","createModal","attr","onclick","showInline","replaceWith","hbutt","className","hideInline","createInstructorButtons","modalContainerDiv","body","modalDialogDiv","modalContentDiv","modalHeaderDiv","modalButton","type","innerHTML","modalTitleE","modalBody","show","find","each","el","CodeMirror","refresh","on","index","err","console","log","eBookConfig","isInstructor","Object","keys"],"sourceRoot":""}