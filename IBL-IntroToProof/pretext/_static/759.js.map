{"version":3,"file":"759.js","mappings":"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","sources":["webpack://WebComponents/./runestone/dragndrop/js/dragndrop-i18n.en.js","webpack://WebComponents/./runestone/dragndrop/js/dragndrop-i18n.pt-br.js","webpack://WebComponents/./runestone/dragndrop/js/dragndrop.js","webpack://WebComponents/./runestone/dragndrop/js/timeddnd.js"],"sourcesContent":["$.i18n().load({\n    en: {\n        msg_dragndrop_correct_answer: \"You are correct!\",\n        msg_dragndrop_incorrect_answer:\n            \"Incorrect. You got $1 correct and $2 incorrect out of $3. You left $4 unmatched.\",\n        msg_dragndrop_check_me: \"Check me\",\n        msg_dragndrop_reset: \"Reset\",\n    },\n});\n","$.i18n().load({\n    \"pt-br\": {\n        msg_dragndrop_correct_answer: \"Correto!\",\n        msg_dragndrop_incorrect_answer:\n            \"Incorreto. Você teve $1 correto(s) e $2 incorreto(s) de $3. Você deixou $4 em branco.\",\n        msg_dragndrop_check_me: \"Verificar\",\n        msg_dragndrop_reset: \"Resetar\",\n    },\n});\n","/*==========================================\n=======     Master dragndrop.js     ========\n============================================\n===     This file contains the JS for    ===\n=== the Runestone Drag n drop component. ===\n============================================\n===              Created by              ===\n===           Isaiah Mayerchak           ===\n===                7/6/15                ===\n===              Brad MIller             ===\n===                2/7/19                ===\n===               12/30/24               ===\n==========================================*/\n\n/*\n * Some terminology:\n * - draggable: the element that is being dragged\n * - dropzone: the element that is being dropped on\n * - premise: the element that is being dragged\n * - response: the element that is being dropped on\n * - category: each premis and response have a category.  Several premises can have the same category\n * and be dropped onto the same response.  If a premise has no response its category will not be in\n * the list of categories.\n *\n * Key variables:\n * - dragArray: an array of draggable elements\n * - dropArray: an array of dropzone elements\n * - categories: an array of all categories\n */\n\"use strict\";\n\nimport RunestoneBase from \"../../common/js/runestonebase.js\";\nimport \"../css/dragndrop.less\";\nimport \"./dragndrop-i18n.en.js\";\nimport \"./dragndrop-i18n.pt-br.js\";\n//import \"./DragDropTouch.js\";\n\nexport default class DragNDrop extends RunestoneBase {\n    constructor(opts) {\n        super(opts);\n        var orig = opts.orig; // entire <ul> element that will be replaced by new HTML\n        this.origElem = orig;\n        this.divid = orig.id;\n        this.useRunestoneServices = opts.useRunestoneServices;\n        this.random = false;\n        if (this.origElem.hasAttribute(\"data-random\")) {\n            this.random = true;\n        }\n        this.feedback = \"\";\n        this.question = \"\";\n        this.populate(); // Populates this.responseArray, this.premiseArray, this.feedback and this.question\n        this.createNewElements();\n        this.caption = \"Drag-N-Drop\";\n        this.addCaption(\"runestone\");\n        if (typeof Prism !== \"undefined\") {\n            Prism.highlightAllUnder(this.containerDiv);\n        }\n    }\n\n    /*======================\n    === Update variables ===\n    ======================*/\n    populate() {\n        this.responseArray = [];\n        this.premiseArray = [];\n        for (let element of this.origElem.querySelectorAll(\n            \"[data-subcomponent='draggable']\"\n        )) {\n            let replaceSpan = document.createElement(\"span\");\n            replaceSpan.innerHTML = element.innerHTML;\n            replaceSpan.id = element.id;\n            replaceSpan.setAttribute(\"draggable\", \"true\");\n            replaceSpan.classList.add(\"draggable-drag\");\n            replaceSpan.classList.add(\"premise\");\n            replaceSpan.dataset.category = this.getCategory(element);\n            replaceSpan.dataset.parent_id = this.divid;\n            this.premiseArray.push(replaceSpan);\n            this.setDragListeners(replaceSpan);\n        }\n        this.premiseArray = shuffleArray(this.premiseArray);\n        for (let element of this.origElem.querySelectorAll(\n            \"[data-subcomponent='dropzone']\"\n        )) {\n            let replaceSpan = document.createElement(\"span\");\n            replaceSpan.innerHTML = element.innerHTML;\n            replaceSpan.id = element\n                .getAttribute(\"for\")\n                .replace(\"drag\", \"drop\");\n            replaceSpan.classList.add(\n                \"draggable-drop\",\n                \"drop-label\",\n                \"response\"\n            );\n            replaceSpan.dataset.category = this.getCategory(element);\n            replaceSpan.dataset.parent_id = this.divid;\n            this.responseArray.push(replaceSpan);\n            this.setDropListeners(replaceSpan);\n        }\n\n        this.question = this.origElem.querySelector(\n            \"[data-subcomponent='question']\"\n        ).innerHTML;\n        this.feedback = this.origElem.querySelector(\n            \"[data-subcomponent='feedback']\"\n        ).innerHTML;\n    }\n\n    getCategory(elem) {\n        if (elem.dataset.category) {\n            return elem.dataset.category;\n        } else {\n            // if no category then use the for attribute or the id\n            // this is for backwards compatibility\n            if (elem.hasAttribute(\"for\")) {\n                return elem.getAttribute(\"for\");\n            } else {\n                return elem.id;\n            }\n        }\n    }\n    /*========================================\n    == Create new HTML elements and replace ==\n    ==      original element with them      ==\n    ========================================*/\n    createNewElements() {\n        this.containerDiv = document.createElement(\"div\");\n        this.containerDiv.id = this.divid;\n        this.containerDiv.classList.add(\"draggable-container\");\n        this.containerDiv.innerHTML = this.question;\n        this.containerDiv.appendChild(document.createElement(\"br\"));\n        this.dragDropWrapDiv = document.createElement(\"div\"); // Holds the draggables/dropzones, prevents feedback from bleeding in\n        this.dragDropWrapDiv.style.display = \"block\";\n        this.containerDiv.appendChild(this.dragDropWrapDiv);\n        this.draggableDiv = document.createElement(\"div\");\n        this.draggableDiv.classList.add(\"rsdraggable\", \"dragzone\");\n        this.addDragDivListeners();\n        this.dropZoneDiv = document.createElement(\"div\");\n        this.dropZoneDiv.classList.add(\"rsdraggable\");\n        this.dragDropWrapDiv.appendChild(this.draggableDiv);\n        this.dragDropWrapDiv.appendChild(this.dropZoneDiv);\n        this.createButtons();\n        this.checkServer(\"dragNdrop\", true);\n        if (eBookConfig.practice_mode) {\n            this.finishSettingUp();\n        }\n        self = this;\n        this.ivp = this.isValidPremise.bind(this);\n        self.queueMathJax(self.containerDiv);\n    }\n\n    finishSettingUp() {\n        this.appendReplacementSpans();\n        this.createFeedbackDiv();\n        this.origElem.parentNode.replaceChild(this.containerDiv, this.origElem);\n        if (!this.hasStoredDropzones) {\n            this.minheight = this.draggableDiv.offsetHeight;\n        }\n        this.draggableDiv.style.minHeight = this.minheight.toString() + \"px\";\n        if (this.dropZoneDiv.offsetHeight > this.minheight) {\n            this.dragDropWrapDiv.style.minHeight =\n                this.dropZoneDiv.offsetHeight.toString() + \"px\";\n        } else {\n            this.dragDropWrapDiv.style.minHeight =\n                this.minheight.toString() + \"px\";\n        }\n    }\n    addDragDivListeners() {\n        let self = this;\n        this.draggableDiv.addEventListener(\n            \"dragover\",\n            function (ev) {\n                ev.preventDefault();\n                if (this.draggableDiv.classList.contains(\"possibleDrop\")) {\n                    return;\n                }\n                this.draggableDiv.classList.add(\"possibleDrop\");\n            }.bind(this)\n        );\n        this.draggableDiv.addEventListener(\n            \"drop\",\n            function (ev) {\n                self.isAnswered = true;\n                ev.preventDefault();\n                if (this.draggableDiv.classList.contains(\"possibleDrop\")) {\n                    this.draggableDiv.classList.remove(\"possibleDrop\");\n                }\n                var data = ev.dataTransfer.getData(\"draggableID\");\n                var draggedSpan = document.getElementById(data);\n                if (\n                    !this.draggableDiv.contains(draggedSpan) &&\n                    !this.strangerDanger(draggedSpan)\n                ) {\n                    // Make sure element isn't already there--prevents erros w/appending child\n                    this.draggableDiv.appendChild(draggedSpan);\n                }\n            }.bind(this)\n        );\n        this.draggableDiv.addEventListener(\n            \"dragleave\",\n            function (e) {\n                if (!this.draggableDiv.classList.contains(\"possibleDrop\")) {\n                    return;\n                }\n                this.draggableDiv.classList.remove(\"possibleDrop\");\n            }.bind(this)\n        );\n    }\n    createButtons() {\n        this.buttonDiv = document.createElement(\"div\");\n        this.submitButton = document.createElement(\"button\"); // Check me button\n        this.submitButton.textContent = $.i18n(\"msg_dragndrop_check_me\");\n        this.submitButton.setAttribute(\"class\", \"btn btn-success drag-button\");\n        this.submitButton.setAttribute(\"name\", \"do answer\");\n        this.submitButton.setAttribute(\"type\", \"button\");\n        this.submitButton.onclick = function () {\n            this.checkCurrentAnswer();\n            this.renderFeedback();\n            this.logCurrentAnswer();\n        }.bind(this);\n        this.resetButton = document.createElement(\"button\"); // Check me button\n        this.resetButton.textContent = $.i18n(\"msg_dragndrop_reset\");\n        this.resetButton.setAttribute(\n            \"class\",\n            \"btn btn-default drag-button drag-reset\"\n        );\n        this.resetButton.setAttribute(\"name\", \"do answer\");\n        this.resetButton.onclick = function () {\n            this.resetDraggables();\n        }.bind(this);\n        this.buttonDiv.appendChild(this.submitButton);\n        this.buttonDiv.appendChild(this.resetButton);\n        this.containerDiv.appendChild(this.buttonDiv);\n    }\n    appendReplacementSpans() {\n        if (\n            this.answerState === undefined ||\n            Object.keys(this.answerState).length === 0\n        ) {\n            this.answerState = {};\n            for (let element of this.premiseArray) {\n                this.draggableDiv.appendChild(element);\n            }\n            for (let element of this.responseArray) {\n                this.dropZoneDiv.appendChild(element);\n            }\n        } else {\n            let placedPremises = [];\n            for (let response of this.responseArray) {\n                this.dropZoneDiv.appendChild(response);\n                if (this.answerState[response.id]) {\n                    for (let premise of this.answerState[response.id]) {\n                        placedPremises.push(premise);\n                        response.appendChild(this.findPremise(premise));\n                    }\n                }\n            }\n            for (let premise of this.premiseArray) {\n                if (placedPremises.indexOf(premise.id) == -1) {\n                    this.draggableDiv.appendChild(premise);\n                }\n            }\n        }\n    }\n\n    findPremise(id) {\n        for (let premise of this.premiseArray) {\n            if (premise.id == id) {\n                return premise;\n            }\n        }\n    }\n\n    setDragListeners(dgSpan) {\n        let self = this;\n        dgSpan.addEventListener(\"dragstart\", function (ev) {\n            ev.dataTransfer.setData(\"draggableID\", ev.target.id);\n        });\n        dgSpan.addEventListener(\"dragover\", function (ev) {\n            ev.preventDefault();\n        });\n        dgSpan.addEventListener(\n            \"drop\",\n            function (ev) {\n                self.isAnswered = true;\n                ev.preventDefault();\n                var data = ev.dataTransfer.getData(\"draggableID\");\n                var draggedSpan = document.getElementById(data);\n                if (\n                    draggedSpan != ev.target &&\n                    !this.strangerDanger(draggedSpan)\n                ) {\n                    // Make sure element isn't already there--prevents erros w/appending child\n                    this.draggableDiv.appendChild(draggedSpan);\n                }\n            }.bind(this)\n        );\n    }\n\n    setDropListeners(dpSpan) {\n        dpSpan.addEventListener(\n            \"dragover\",\n            function (ev) {\n                self.isAnswered = true;\n                ev.preventDefault();\n                if (ev.target.classList.contains(\"possibleDrop\")) {\n                    return;\n                }\n                if (ev.target.classList.contains(\"draggable-drop\")) {\n                    ev.target.classList.add(\"possibleDrop\");\n                }\n            }.bind(this)\n        );\n        dpSpan.addEventListener(\"dragleave\", function (ev) {\n            self.isAnswered = true;\n            ev.preventDefault();\n            if (!ev.target.classList.contains(\"possibleDrop\")) {\n                return;\n            }\n            ev.target.classList.remove(\"possibleDrop\");\n        });\n        dpSpan.addEventListener(\n            \"drop\",\n            function (ev) {\n                self.isAnswered = true;\n                ev.preventDefault();\n                if (ev.target.classList.contains(\"possibleDrop\")) {\n                    ev.target.classList.remove(\"possibleDrop\");\n                }\n                var data = ev.dataTransfer.getData(\"draggableID\");\n                var draggedSpan = document.getElementById(data);\n                if (\n                    ev.target.classList.contains(\"draggable-drop\") &&\n                    !this.strangerDanger(draggedSpan) &&\n                    !this.premiseArray.includes(ev.target) // don't drop on another premise!\n                ) {\n                    // Make sure element isn't already there--prevents erros w/appending child\n                    ev.target.appendChild(draggedSpan);\n                }\n            }.bind(this)\n        );\n    }\n\n    createFeedbackDiv() {\n        if (!this.feedBackDiv) {\n            this.feedBackDiv = document.createElement(\"div\");\n            this.feedBackDiv.id = this.divid + \"_feedback\";\n            this.containerDiv.appendChild(document.createElement(\"br\"));\n            this.containerDiv.appendChild(this.feedBackDiv);\n        }\n    }\n    /*=======================\n    == Auxiliary functions ==\n    =======================*/\n    /* leaving the name as is, because it reminds me of Isaiah! */\n    strangerDanger(testSpan) {\n        // Returns true if the test span doesn't belong to this instance of DragNDrop\n        if (testSpan.dataset.parent_id != this.divid) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    /*==============================\n    == Reset button functionality ==\n    ==============================*/\n    resetDraggables() {\n        this.dropZoneDiv.innerHTML = \"\";\n        for (let response of this.responseArray) {\n            response.classList.remove(\"drop-incorrect\");\n            this.dropZoneDiv.appendChild(response);\n        }\n        this.draggableDiv.innerHTML = \"\";\n        shuffleArray(this.premiseArray);\n        for (let premise of this.premiseArray) {\n            this.draggableDiv.appendChild(premise);\n        }\n        this.answerState = {};\n        this.feedBackDiv.style.display = \"none\";\n    }\n    /*===========================\n    == Evaluation and feedback ==\n    ===========================*/\n    getAllCategories() {\n        this.categories = [];\n        for (let response of this.dropZoneDiv.childNodes) {\n            this.categories.push(response.dataset.category);\n        }\n        return this.categories;\n    }\n\n    checkCurrentAnswer() {\n        let categories = this.getAllCategories();\n        this.correct = true;\n        this.unansweredNum = 0;\n        this.incorrectNum = 0;\n        this.correctNum = 0;\n        this.dragNum = this.premiseArray.length;\n\n        for (let response of this.dropZoneDiv.childNodes) {\n            // ignore drop zone children that aren't premises\n            for (let premise of Array.from(response.childNodes).filter(\n                this.ivp\n            )) {\n                if (premise.dataset.category == response.dataset.category) {\n                    this.correctNum++;\n                } else {\n                    this.incorrectNum++;\n                }\n            }\n        }\n        for (let premise of Array.from(this.draggableDiv.childNodes).filter(\n            (node) => node.nodeType !== Node.TEXT_NODE\n        )) {\n            if (categories.indexOf(premise.dataset.category) == -1) {\n                this.correctNum++;\n            } else {\n                this.unansweredNum++;\n            }\n        }\n        this.percent = this.correctNum / this.premiseArray.length;\n        console.log(this.percent, this.incorrectNum, this.unansweredNum);\n        if (this.percent < 1.0) {\n            this.correct = false;\n        }\n        this.setLocalStorage({ correct: this.correct ? \"T\" : \"F\" });\n    }\n\n    isCorrectDrop(response) {\n        // Returns true if all premises in the response are in the correct category\n        // and all premises in the category are in the response\n        // used by renderFeedback\n        let correct = true;\n        let correctPlacements = 0;\n        for (let premise of Array.from(response.childNodes).filter(this.ivp)) {\n            if (premise.dataset.category != response.dataset.category) {\n                correct = false;\n            } else {\n                correctPlacements++;\n            }\n        }\n        let catCount = 0;\n        for (let premis of this.premiseArray) {\n            if (premis.dataset.category == response.dataset.category) {\n                catCount++;\n            }\n        }\n        return correct && correctPlacements == catCount;\n    }\n\n    isValidPremise(premise) {\n        if (this.premiseArray.includes(premise)) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    async logCurrentAnswer(sid) {\n        let answer = JSON.stringify(this.answerState);\n        let data = {\n            event: \"dragNdrop\",\n            act: answer,\n            answer: answer,\n            min_height: Math.round(this.minheight),\n            div_id: this.divid,\n            correct: this.correct,\n            correctNum: this.correctNum,\n            dragNum: this.dragNum,\n        };\n        if (typeof sid !== \"undefined\") {\n            data.sid = sid;\n        }\n        await this.logBookEvent(data);\n    }\n    renderFeedback() {\n        for (let response of this.dropZoneDiv.childNodes) {\n            if (this.isCorrectDrop(response)) {\n                response.classList.remove(\"drop-incorrect\");\n            } else {\n                response.classList.add(\"drop-incorrect\");\n            }\n        }\n        if (!this.feedBackDiv) {\n            this.createFeedbackDiv();\n        }\n        this.feedBackDiv.style.display = \"block\";\n        if (this.correct) {\n            var msgCorrect = $.i18n(\"msg_dragndrop_correct_answer\");\n            this.feedBackDiv.innerHTML = msgCorrect;\n            this.feedBackDiv.className = \"alert alert-info draggable-feedback\";\n        } else {\n            var msgIncorrect = $.i18n(\n                $.i18n(\"msg_dragndrop_incorrect_answer\"),\n                this.correctNum,\n                this.incorrectNum,\n                this.dragNum,\n                this.unansweredNum\n            );\n            // this.feedback comes from the author (a hint maybe)\n            this.feedBackDiv.innerHTML = msgIncorrect + \" \" + this.feedback;\n            this.feedBackDiv.className =\n                \"alert alert-danger draggable-feedback\";\n        }\n    }\n    /*===================================\n    === Checking/restoring from storage ===\n    ===================================*/\n    restoreAnswers(data) {\n        // Restore answers from storage retrieval done in RunestoneBase\n        this.hasStoredDropzones = true;\n        this.minheight = data.min_height;\n        this.answerState = JSON.parse(data.answer);\n        this.finishSettingUp();\n    }\n\n    checkLocalStorage() {\n        if (this.graderactive) {\n            return;\n        }\n        var storedObj;\n        this.hasStoredDropzones = false;\n        var len = localStorage.length;\n        if (len > 0) {\n            var ex = localStorage.getItem(this.localStorageKey());\n            if (ex !== null) {\n                this.hasStoredDropzones = true;\n                try {\n                    storedObj = JSON.parse(ex);\n                    this.minheight = storedObj.min_height;\n                } catch (err) {\n                    // error while parsing; likely due to bad value stored in storage\n                    console.log(err.message);\n                    localStorage.removeItem(this.localStorageKey());\n                    this.hasStoredDropzones = false;\n                    this.finishSettingUp();\n                    return;\n                }\n                this.answerState = storedObj.answer;\n                if (this.useRunestoneServices) {\n                    // store answer in database\n                    let answer = JSON.stringify(this.answerState);\n                    this.logBookEvent({\n                        event: \"dragNdrop\",\n                        act: answer,\n                        answer: answer,\n                        min_height: Math.round(this.minheight),\n                        div_id: this.divid,\n                        correct: storedObj.correct,\n                    });\n                }\n            }\n        }\n        this.finishSettingUp();\n    }\n\n    setLocalStorage(data) {\n        if (data.answer === undefined) {\n            // If we didn't load from the server, we must generate the data\n            this.answerState = {};\n            for (let response of this.dropZoneDiv.childNodes) {\n                this.answerState[response.id] = [];\n                for (let premise of response.childNodes) {\n                    if (\n                        premise.nodeType !== Node.TEXT_NODE &&\n                        this.premiseArray.includes(premise)\n                    ) {\n                        this.answerState[response.id].push(premise.id);\n                    }\n                }\n            }\n        }\n        var timeStamp = new Date();\n        var correct = data.correct;\n        var storageObj = {\n            answer: this.answerState,\n            min_height: this.minheight,\n            timestamp: timeStamp,\n            correct: correct,\n        };\n        localStorage.setItem(\n            this.localStorageKey(),\n            JSON.stringify(storageObj)\n        );\n    }\n\n    disableInteraction() {\n        this.resetButton.style.display = \"none\";\n        for (var i = 0; i < this.premiseArray.length; i++) {\n            // No more dragging\n            this.premiseArray[i].draggable = false;\n            this.premiseArray[i].style.cursor = \"initial\";\n        }\n    }\n}\n\nfunction shuffleArray(array) {\n    for (let i = array.length - 1; i > 0; i--) {\n        // Generate a random index between 0 and i\n        const j = Math.floor(Math.random() * (i + 1));\n        // Swap elements at indices i and j\n        [array[i], array[j]] = [array[j], array[i]];\n    }\n    return array;\n}\n\n/*=================================\n== Find the custom HTML tags and ==\n==   execute our code on them    ==\n=================================*/\ndocument.addEventListener(\"runestone:login-complete\", function () {\n    const elements = document.querySelectorAll(\"[data-component=dragndrop]\");\n    elements.forEach((element) => {\n        const opts = {\n            orig: element,\n            useRunestoneServices: eBookConfig.useRunestoneServices,\n        };\n        if (!element.closest(\"[data-component=timedAssessment]\")) {\n            // If this element exists within a timed component, don't render it here\n            try {\n                window.componentMap[element.id] = new DragNDrop(opts);\n            } catch (err) {\n                console.log(\n                    `Error rendering DragNDrop Problem ${element.id}: ${err}`\n                );\n            }\n        }\n    });\n});\n","\"use strict\";\n\nimport DragNDrop from \"./dragndrop.js\";\n\nexport default class TimedDragNDrop extends DragNDrop {\n    constructor(opts) {\n        super(opts);\n        this.finishSettingUp();\n        this.renderTimedIcon(this.containerDiv);\n        this.hideButtons();\n    }\n    hideButtons() {\n        $(this.submitButton).hide();\n    }\n    renderTimedIcon(component) {\n        // renders the clock icon on timed components.    The component parameter\n        // is the element that the icon should be appended to.\n        var timeIconDiv = document.createElement(\"div\");\n        var timeIcon = document.createElement(\"img\");\n        $(timeIcon).attr({\n            src: \"../_static/clock.png\",\n            style: \"width:15px;height:15px\",\n        });\n        timeIconDiv.className = \"timeTip\";\n        timeIconDiv.title = \"\";\n        timeIconDiv.appendChild(timeIcon);\n        $(component).prepend(timeIconDiv);\n    }\n    checkCorrectTimed() {\n        // Returns if the question was correct.    Used for timed assessment grading.\n        if (this.unansweredNum === this.dragPairArray.length) {\n            this.correct = null;\n        }\n        switch (this.correct) {\n            case true:\n                return \"T\";\n            case false:\n                return \"F\";\n            default:\n                return null;\n        }\n    }\n    hideFeedback() {\n        $(this.feedBackDiv).hide();\n    }\n}\n\nif (typeof window.component_factory === \"undefined\") {\n    window.component_factory = {};\n}\nwindow.component_factory[\"dragndrop\"] = function (opts) {\n    if (opts.timed) {\n        return new TimedDragNDrop(opts);\n    }\n    return new DragNDrop(opts);\n};\n"],"names":["$","i18n","load","en","msg_dragndrop_correct_answer","msg_dragndrop_incorrect_answer","msg_dragndrop_check_me","msg_dragndrop_reset","DragNDrop","constructor","opts","super","orig","this","origElem","divid","id","useRunestoneServices","random","hasAttribute","feedback","question","populate","createNewElements","caption","addCaption","Prism","highlightAllUnder","containerDiv","responseArray","premiseArray","element","querySelectorAll","replaceSpan","document","createElement","innerHTML","setAttribute","classList","add","dataset","category","getCategory","parent_id","push","setDragListeners","shuffleArray","getAttribute","replace","setDropListeners","querySelector","elem","appendChild","dragDropWrapDiv","style","display","draggableDiv","addDragDivListeners","dropZoneDiv","createButtons","checkServer","eBookConfig","practice_mode","finishSettingUp","self","ivp","isValidPremise","bind","queueMathJax","appendReplacementSpans","createFeedbackDiv","parentNode","replaceChild","hasStoredDropzones","minheight","offsetHeight","minHeight","toString","addEventListener","ev","preventDefault","contains","isAnswered","remove","data","dataTransfer","getData","draggedSpan","getElementById","strangerDanger","e","buttonDiv","submitButton","textContent","onclick","checkCurrentAnswer","renderFeedback","logCurrentAnswer","resetButton","resetDraggables","undefined","answerState","Object","keys","length","placedPremises","response","premise","findPremise","indexOf","dgSpan","setData","target","dpSpan","includes","feedBackDiv","testSpan","getAllCategories","categories","childNodes","correct","unansweredNum","incorrectNum","correctNum","dragNum","Array","from","filter","node","nodeType","Node","TEXT_NODE","percent","console","log","setLocalStorage","isCorrectDrop","correctPlacements","catCount","premis","sid","answer","JSON","stringify","event","act","min_height","Math","round","div_id","logBookEvent","msgCorrect","className","msgIncorrect","restoreAnswers","parse","checkLocalStorage","graderactive","storedObj","localStorage","ex","getItem","localStorageKey","err","message","removeItem","timeStamp","Date","storageObj","timestamp","setItem","disableInteraction","i","draggable","cursor","array","j","floor","forEach","closest","window","componentMap","TimedDragNDrop","renderTimedIcon","hideButtons","hide","component","timeIconDiv","timeIcon","attr","src","title","prepend","checkCorrectTimed","dragPairArray","hideFeedback","component_factory","timed"],"sourceRoot":""}