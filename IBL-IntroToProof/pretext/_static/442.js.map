{"version":3,"file":"442.js","mappings":"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","sources":["webpack://WebComponents/./runestone/tabbedStuff/js/tabbedstuff.js"],"sourcesContent":["/*==========================================\n=======    Master tabbedstuff.js    ========\n============================================\n===     This file contains the JS for    ===\n=== the Runestone tabbedStuff component. ===\n============================================\n===              Created by              ===\n===           Isaiah Mayerchak           ===\n===               06/15/15               ===\n===             Brad Miller              ===\n===               06/15/15               ===\n==========================================*/\n\"use strict\";\n\nvar TSList = {}; // Dictionary that contains all instances of TabbedStuff objects\n\nimport RunestoneBase from \"../../common/js/runestonebase\";\nimport \"../css/tabbedstuff.css\";\n\n// Define TabbedStuff object\nclass TabbedStuff extends RunestoneBase {\n    constructor(opts) {\n        super(opts);\n        var orig = opts.orig;\n        this.origElem = orig; // entire original <div> element that will be replaced by new HTML\n        this.divid = orig.id;\n        this.inactive = false;\n        if ($(this.origElem).is(\"[data-inactive]\")) {\n            this.inactive = true;\n        }\n        this.togglesList = []; // For use in Codemirror/Disqus\n        this.childTabs = [];\n        this.populateChildTabs();\n        this.activeTab = 0; // default value--activeTab is the index of the tab that starts open\n        this.findActiveTab();\n        this.createTabContainer();\n        this.indicate_component_ready();\n    }\n    /*===========================================\n    == Update attributes of instance variables ==\n    ==    variables according to specifications    ==\n    ===========================================*/\n    populateChildTabs() {\n        for (var i = 0; i < this.origElem.childNodes.length; i++) {\n            if ($(this.origElem.childNodes[i]).data(\"component\") === \"tab\") {\n                this.childTabs.push(this.origElem.childNodes[i]);\n            }\n        }\n    }\n    findActiveTab() {\n        for (var i = 0; i < this.childTabs.length; i++) {\n            if ($(this.childTabs[i]).is(\"[data-active]\")) {\n                this.activeTab = i;\n            }\n        }\n    }\n    /*==========================================\n    == Creating/appending final HTML elements ==\n    ==========================================*/\n    createTabContainer() {\n        this.containerDiv = document.createElement(\"div\");\n        this.containerDiv.id = this.divid;\n        $(this.containerDiv).addClass(this.origElem.getAttribute(\"class\"));\n        $(this.containerDiv).attr({ role: \"tabpanel\" });\n        this.tabsUL = document.createElement(\"ul\");\n        this.tabsUL.id = this.divid + \"_tab\";\n        $(this.tabsUL).addClass(\"nav nav-tabs\");\n        $(this.tabsUL).attr({ role: \"tablist\" });\n        this.tabContentDiv = document.createElement(\"div\"); // Create tab content container that holds tab panes w/content\n        $(this.tabContentDiv).addClass(\"tab-content\");\n        this.createTabs(); // create and append tabs to the <ul>\n        this.containerDiv.appendChild(this.tabsUL);\n        this.containerDiv.appendChild(this.tabContentDiv);\n        this.addCMD(); // Adds fuctionality for Codemirror/Disqus\n        $(this.origElem).replaceWith(this.containerDiv);\n    }\n    createTabs() {\n        // Create tabs in format <li><a><span></span></a></li> to be appended to the <ul>\n        for (var i = 0; i < this.childTabs.length; i++) {\n            // First create tabname and tabfriendly name that has no spaces to be used for the id\n            var tabListElement = document.createElement(\"li\");\n            $(tabListElement).attr({\n                role: \"presentation\",\n                \"aria-controls\": this.divid + \"-\" + i\n            });\n            // Using bootstrap tabs functionality\n            var tabElement = document.createElement(\"a\");\n            $(tabElement).attr({\n                \"data-toggle\": \"tab\",\n                href: \"#\" + this.divid + \"-\" + i,\n                role: \"tab\"\n            });\n            var tabTitle = document.createElement(\"span\"); // Title of tab--what the user will see\n            tabTitle.textContent = $(this.childTabs[i]).data(\"tabname\");\n            tabElement.appendChild(tabTitle);\n            tabListElement.appendChild(tabElement);\n            this.tabsUL.appendChild(tabListElement);\n            // tabPane is what holds the contents of the tab\n            var tabPaneDiv = document.createElement(\"div\");\n            tabPaneDiv.id = this.divid + \"-\" + i;\n            $(tabPaneDiv).addClass(\"tab-pane\");\n            $(tabPaneDiv).attr({\n                role: \"tabpanel\"\n            });\n            //var tabHTML = $(this.childTabs[i]).html();\n            //$(tabPaneDiv).html(tabHTML);\n            tabPaneDiv.appendChild(this.childTabs[i]);\n            if (!this.inactive) {\n                if (this.activeTab === i) {\n                    $(tabListElement).addClass(\"active\");\n                    $(tabPaneDiv).addClass(\"active\");\n                }\n            }\n            this.togglesList.push(tabElement);\n            this.tabContentDiv.appendChild(tabPaneDiv);\n        }\n    }\n    /*===================================\n    == Codemirror/Disqus functionality ==\n    ===================================*/\n    addCMD() {\n        $(this.togglesList).on(\"shown.bs.tab\", function(e) {\n            var content_div = $(e.target.attributes.href.value);\n            content_div.find(\".disqus_thread_link\").each(function() {\n                $(this).click();\n            });\n            content_div.find(\".CodeMirror\").each(function(i, el) {\n                el.CodeMirror.refresh();\n            });\n        });\n    }\n}\n\n/*=================================\n== Find the custom HTML tags and ==\n==     execute our code on them        ==\n=================================*/\n$(\"load\", function() {\n    $(\"[data-component=tabbedStuff]\").each(function(index) {\n        TSList[this.id] = new TabbedStuff({ orig: this });\n    });\n});\n"],"names":["TSList","TabbedStuff","constructor","opts","super","orig","this","origElem","divid","id","inactive","$","is","togglesList","childTabs","populateChildTabs","activeTab","findActiveTab","createTabContainer","indicate_component_ready","i","childNodes","length","data","push","containerDiv","document","createElement","addClass","getAttribute","attr","role","tabsUL","tabContentDiv","createTabs","appendChild","addCMD","replaceWith","tabListElement","tabElement","href","tabTitle","textContent","tabPaneDiv","on","e","content_div","target","attributes","value","find","each","click","el","CodeMirror","refresh","index"],"sourceRoot":""}